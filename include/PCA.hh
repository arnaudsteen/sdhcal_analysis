/// \file PCA.hh
/*
 *
 * PCA.hh header template generated by fclass
 * Creation date : ven. juil. 12 2013
 * Copyright (c) CNRS , IPNL
 *
 * All Right Reserved.
 * Use and copying of these libraries and preparation of derivative works
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * @author : rete
 */


#ifndef PCA_HH
#define PCA_HH

#include <iostream> 
#include <string> 
#include <cstdlib> 
#include <cmath> 
#include <vector>
#include <numeric>

#include "TMatrixT.h"
#include "TMatrixDEigen.h"
#include "TVectorD.h"

typedef std::vector<double> Row;
typedef std::vector<Row> RowCollection;

class PCA {  
public:  
  PCA(){;}
  virtual ~PCA();
  virtual void AddRow( const Row &row );
  inline TMatrixD GetEigenVectors(){ return eigenVectors; }
  inline TVectorD GetEigenValues(){ return eigenValues; }
  virtual void Init();
  virtual void CheckConsistency();
  virtual void Execute(bool showResults=false);
  virtual void End();

protected:
  RowCollection pcaRows;
  TVectorD eigenValues;
  TMatrixD eigenVectors;
};
#endif  //  PCA_HH
